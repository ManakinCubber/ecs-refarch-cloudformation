Description: >

    This template deploys a VPC, with a pair of public and private subnets spread 
    across two Availabilty Zones. It deploys an Internet Gateway, with a default 
    route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ), 
    and default routes for them in the private subnets.

    It then deploys a highly available ECS cluster using an AutoScaling Group, with 
    ECS hosts distributed across multiple Availability Zones. 

    Finally, it deploys a pair of example ECS services from containers published in 
    Amazon EC2 Container Registry (Amazon ECR).

    Last Modified: 22nd September 2016
    Author: Paul Maddox <pmaddox@amazon.com>

Parameters:
    ECSInstanceType:
        Type: String
        AllowedValues:            
            - t2.micro
            - t2.small
            - t2.medium
        Default: t2.small
        Description: Instance type for the ECS cluster hosts.

    BastionKeyPair:
        Type: String
        Default: ''
        Description: KayPair name to ssh to the bastion

    ClusterSize:
        Type: Number
        Description: Number of hosts in the ECS cluster
        Default: 1
    
    EnvDomain:
        Type: String
        Description: The envdomain to generate DNS records in Route53

    InternalDomain:
        Type: String
        Description: The domain to generate internal DNS records in Route53

    CertificateArn:
        Description: A certificate arn associated with the domain
        Type: String

Resources:

    VPC:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-eu-west-1.amazonaws.com/manakin-cloudformation-templates/infrastructure/vpc.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName

    SecurityGroups:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-eu-west-1.amazonaws.com/manakin-cloudformation-templates/infrastructure/security-groups.yaml
            Parameters: 
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC

    ALB:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-eu-west-1.amazonaws.com/manakin-cloudformation-templates/infrastructure/load-balancers.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC
                Subnets: !GetAtt VPC.Outputs.PublicSubnets
                SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup
                CertificateArn: !Ref CertificateArn

    ECS:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-eu-west-1.amazonaws.com/manakin-cloudformation-templates/infrastructure/ecs-cluster.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                InstanceType: t2.medium
                ClusterSize: !Ref ClusterSize
                VPC: !GetAtt VPC.Outputs.VPC
                SecurityGroup: !Join [",", [!GetAtt VPC.Outputs.DefaultSecGroup, !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup]]
                Subnets: !GetAtt VPC.Outputs.PrivateSubnets
                SSHKeyPair: !Ref BastionKeyPair
                InternalDomain: !Ref InternalDomain
    Bastion:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-eu-west-1.amazonaws.com/manakin-cloudformation-templates/infrastructure/bastion.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                InstanceType: t2.micro
                VPC: !GetAtt VPC.Outputs.VPC
                SecurityGroups: !Join [",", [ !GetAtt SecurityGroups.Outputs.BastionSecurityGroup, !GetAtt VPC.Outputs.DefaultSecGroup ]]
                Subnets: !GetAtt VPC.Outputs.PublicSubnet1
                KeyPair: !Ref BastionKeyPair

    Consul:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-eu-west-1.amazonaws.com/manakin-cloudformation-templates/infrastructure/consul.yml
            Parameters:
                InstanceType: t2.medium
                SSHKeyPair: !Ref BastionKeyPair
                SecurityGroups: !Join [",", [!GetAtt VPC.Outputs.DefaultSecGroup, !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup, !GetAtt SecurityGroups.Outputs.BastionSecurityGroup]]
                Subnet: !GetAtt VPC.Outputs.PublicSubnet1
                EnvironmentName: !Ref AWS::StackName

    Services:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-eu-west-1.amazonaws.com/manakin-cloudformation-templates/infrastructure/services.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                EnvDomain: !Ref EnvDomain
                VPC: !GetAtt VPC.Outputs.VPC
                ALB80Listener: !GetAtt ALB.Outputs.Listener
                ALB443Listener: !GetAtt ALB.Outputs.HttpsListener
                ConsulInstance: !GetAtt Consul.Outputs.Consul